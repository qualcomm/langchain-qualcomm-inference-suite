[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "langchain-qualcomm-inference-suite"
version = "1.0.0"
description = "An integration package connecting Qualcomm AI Inference Suite and LangChain"
license = { text = "BSD 3-Clause Clear License" }
readme = "README.md"
requires-python = ">=3.9"
authors = [{name="Qualcomm Innovation Center, Inc", email="quic.opensource@quicinc.com"}]
maintainers = [
    { name = "Sergi Pons Freixes", email = "sponsfre@qti.qualcomm.com"},
]
keywords = [ "qualcomm", "ai", "inference", "generative", "langchain" ]

[project.urls]
Repository = "https://github.com/qualcomm/langchain-qualcomm-inference-suite"

[tool.mypy]
disallow_untyped_defs = "True"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
langchain-core = "^0.3.15"
python-imagine-sdk = "^0.4.2"

[tool.ruff.lint]
select = ["E", "F", "I", "T201"]

[tool.coverage.run]
omit = ["tests/*"]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5"
markers = [
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"

[tool.poetry.group.test]
optional = true

[tool.poetry.group.codespell]
optional = true

[tool.poetry.group.test_integration]
optional = true

[tool.poetry.group.lint]
optional = true

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]

[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.23.2"
pytest-socket = "^0.7.0"
pytest-watcher = "^0.3.4"
langchain-tests = "0.3.17"

[tool.poetry.group.codespell.dependencies]
codespell = "^2.2.6"

[tool.poetry.group.test_integration.dependencies]

[tool.poetry.group.lint.dependencies]
ruff = "^0.5"

[tool.poetry.group.typing.dependencies]
mypy = "^1.10"
